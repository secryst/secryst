name: test 

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    name: "Train (Ruby ${{ matrix.ruby }}, Python)/ translate: (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        # windows-latest
        ruby: ['2.6', '2.7']
        experimental: [false]
        include:

    steps:
      - uses: actions/checkout@master

      - name: Use Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          architecture: x64

      - name: Install ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        #
        # wget unzips to ./libtorch
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libfftw3-dev libgsl-dev libopenblas-dev \
            liblapack-dev liblapacke-dev unzip automake make gcc g++
          wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.8.1%2Bcpu.zip
          unzip libtorch-cxx11-abi-shared-with-deps-1.8.1+cpu.zip

      - name: Install macos dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install libtorch gsl lapack openblas fftw automake gcc

      # - uses: actions/cache@v2
      #   with:
      #     path: vendor/bundle
      #     key: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-

      # - name: Install windows dependencies
      #   if: matrix.os == 'windows-latest'
      #   uses: nick-invision/retry@v1
      #   with:
      #     polling_interval_seconds: 5
      #     timeout_minutes: 5
      #     max_attempts: 3
      #     command: choco install --no-progress swig --version 4.0.1

      - name: Install python dependencies
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          pip install torch==1.8.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip install flatbuffers
          pip install ort-nightly -i https://test.pypi.org/simple/

      - name: Install bundler and bundle config
        if: matrix.os == 'ubuntu-latest'
        run: |
          gem install bundler -v "~> 2"
          bundle config build.torch-rb \
            --with-torch-dir=$(pwd)/libtorch

      - name: Install bundler and bundle config
        if: matrix.os == 'macos-latest'
        run: |
          gem install bundler -v "~> 2"
          bundle config build.numo-linalg \
            --with-openblas-dir=$(brew --prefix openblas) \
            --with-lapack-lib=$(brew --prefix lapack)
          bundle config build.torch-rb \
            --with-torch-dir=$(brew --prefix libtorch)

      - name: bundle install
        # bundle config deployment true
        # bundle config path vendor/bundle
        run: |
          BUNDLE_GEMFILE=Gemfile-secryst bundle install
          bundle install --jobs 4 --retry 5

      - name: Train model
        run: |
          echo "Running 'examples/training.rb'"
          bundle exec examples/training.rb

      - name: Test model
        run: |
          echo "Running 'examples/translating.rb'"
          bundle exec examples/translating.rb

      - name: Test translate CLI
        run: |
          echo "Running 'secryst translate'"
          bundle exec secryst translate \
            --input_text_file=examples/translate-thai.txt \
            --model-file=examples/khm-latn-small/checkpoints/checkpoint-500.zip

      - name: Test train CLI
        run: |
          echo "Running 'secryst-trainer train'"
          bundle exec secryst-trainer train \
            -i 'examples/khm-latn-small/input.csv' \
            -t 'examples/khm-latn-small/target.csv' \
            --batch-size=32 --max-epochs=500 --log-interval=1 \
            --checkpoint-every=50 --checkpoint_dir=examples/checkpoints \
            --gamma=0.9999

      - name: Test Python train
        run: |
          echo "Running 'python3 python/train.py'"
          python3 python/train.py \
            -i 'examples/khm-latn-small/input.csv' \
            -t 'examples/khm-latn-small/target.csv' \
            --batch-size=32 --max-epochs=500 --log-interval=1 \
            --checkpoint-every=50 --checkpoint-dir=examples/checkpoints-py \
            --gamma=0.9999
