name: ONNX-only test

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    # if: "!contains(github.event.commits[0].message, '[skip ci]')"
    name: Run specs on ${{ matrix.os }} ruby ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        # windows-latest
        ruby: ['2.7']
        # '2.5', '2.4'
        experimental: [true]

    steps:
      - uses: actions/checkout@master

      - name: Use Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          architecture: x64


      # - uses: actions/cache@v2
      #   with:
      #     path: vendor/bundle
      #     key: bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       bundle-use-ruby-${{ matrix.os }}-${{ matrix.ruby }}-

      # - name: Install windows dependencies
      #   if: matrix.os == 'windows-latest'
      #   uses: nick-invision/retry@v1
      #   with:
      #     polling_interval_seconds: 5
      #     timeout_minutes: 5
      #     max_attempts: 3
      #     command: choco install --no-progress swig --version 4.0.1

      - name: Install dependencies
        # bundle config deployment true
        # bundle config path vendor/bundle
        run: |
          gem install thor -v 1.0.1
          gem install onnxruntime -v 0.5.2
          gem install rubyzip -v 2.3.0

      - name: Test ONNX translation
        run: |
          echo "Running ONNX import test"
          bin/secryst translate --model-file ./examples/onnx-model/model.zip -t ./examples/onnx-model/texts-ar.txt